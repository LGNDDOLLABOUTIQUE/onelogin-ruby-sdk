<div class="jumbotron">
  <p>This is a simple demo of how to authenticate a user and handle MFA when required</p>
</div>

<div class="container">
  <div class="row">
    <div class="col-sm">
    </div>
    <div class="col-sm">

      <div class="alert alert-danger message" role="alert">
      </div>

      <%= form_tag("/login", method: "post", class: 'login-form') do %>
        <div class="form-group">
          <label for="username">Username</label>
          <%= text_field_tag :username, nil, placeholder: 'Enter Username', class: 'form-control' %>
        </div>
        <div class="form-group">
          <label for="password">Password</label>
          <%= password_field_tag :password, nil, placeholder: 'Enter Password', class: 'form-control' %>
        </div>
        <button type="submit" class="btn btn-primary">Login</button>
        <hr/>
        <a href="#" class="forgot">Forgot Password</a> | <a href="/signup">Sign Up</a>
      <% end %>

      <%= form_tag("/verify_mfa", method: "post", class: 'mfa-form') do %>
        <div class="form-group">
          <label for="device_id">MFA Device</label>
          <%= select_tag :device_id, nil, {:class => 'form-control'} %>
        </div>
        <div class="form-group">
          <label for="otp_token">Token</label>
          <%= text_field_tag :otp_token, nil, placeholder: 'Enter Token', class: 'form-control' %>
        </div>
        <button type="submit" class="btn btn-primary">Verify Token</button>
      <% end %>

      <%= form_tag("/forgot_password", method: "post", class: 'forgot-password-form') do %>
        <div class="form-group">
          <label for="forgot_username">Username</label>
          <%= text_field_tag :forgot_username, nil, placeholder: 'Enter Username', class: 'form-control' %>
        </div>
        <button type="submit" class="btn btn-primary">Reset Password</button> or <a href="/">Login</a>
      <% end %>

      <%= form_tag("/reset_password", method: "post", class: 'reset-password-form') do %>
        <div class="form-group">
          <label for="reset_device_id">MFA Device</label>
          <%= select_tag :reset_device_id, nil, {:class => 'form-control'} %>
        </div>
        <div class="form-group">
          <label for="reset_otp_token">Token</label>
          <%= text_field_tag :reset_otp_token, nil, placeholder: 'Enter Token', class: 'form-control' %>
        </div>
        <div class="form-group">
          <label for="new_password">New Password</label>
          <%= password_field_tag :new_password, nil, placeholder: 'Enter New Password', class: 'form-control' %>
        </div>
        <button type="submit" class="btn btn-primary">Save Password</button>
      <% end %>

      <form method="POST" action="" id="sp"></form>

    </div>
    <div class="col-sm">
    </div>
  </div>
</div>




<script type="text/javascript">

  var ONELOGIN_SUBDOMAIN = "<%= ONELOGIN_SUBDOMAIN %>"
  var CUSTOM_DOMAIN = "<%= CUSTOM_DOMAIN %>"

  function makeCors(session_token) {
    var xhr = new XMLHttpRequest();
    xhr.withCredentials = true;
    method = "POST";
    if (CUSTOM_DOMAIN) {
      var url = "https://" + CUSTOM_DOMAIN + "/session_via_api_token";
    } else {
      var url = "https://" + ONELOGIN_SUBDOMAIN + ".onelogin.com/session_via_api_token";
    }
    xhr.open(method, url, true);
    xhr.setRequestHeader("Content-Type", "application/json");
    body = {"session_token": session_token};
    xhr.onreadystatechange = function () {
      if(xhr.readyState === 4 && xhr.status === 200) {
        if(getUrlParameter("origin")){
          // If there is an origin SP then redirect to it
          redirectToSP()
        } else{
          // Otherwise redirect to the main dashboard
          window.location.href = '/dashboard';
        }
      }
    };
    xhr.send(JSON.stringify(body));
  };

  function showAlert(type, message){
    $(".message").removeClass("alert-danger").removeClass("alert-success");
    $(".message").addClass("alert-" + type).text(message).show();
    $(".message").show();
  }
  function hideAlert(){
    $(".message").hide();
  }

  function getUrlParameter(sParam) {
      var sPageURL = window.location.search.substring(1),
          sURLVariables = sPageURL.split('&'),
          sParameterName,
          i;

      for (i = 0; i < sURLVariables.length; i++) {
          sParameterName = sURLVariables[i].split('=');

          if (sParameterName[0] === sParam) {
              return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
          }
      }
  };

  function redirectToSP() {
    var origin = getUrlParameter("origin");
    var samlRequest = getUrlParameter("SAMLRequest");
    var url = origin + "&SAMLRequest=" + samlRequest;
    $("#sp").attr("action", url).submit();
  }

  $(function(){
    hideAlert();
    $(".login-form").show();
    $(".mfa-form").hide();
    $(".forgot-password-form").hide();
    $(".reset-password-form").hide();

    $(".forgot").click(function(e){
      e.preventDefault();
      $(".forgot-password-form").show();
      $(".login-form").hide();
    });

    $(".login-form").on("submit", function(event){
      $.ajax({
        type: "POST",
        url: this.action,
        data: $(this).serialize(),
        success: function(res, status, xhr) {
          console.log(res);
          if(res.requires_mfa){
            console.log('requires mfa')
            showAlert('danger', 'MFA Required')

            for(var i=0; i<res.devices.length; i++){
              $('.mfa-form select').append('<option value="' + res.devices[i].id + '">' + res.devices[i].type + '</option>');
            }
            $(".login-form").hide();
            $(".mfa-form").show();

          }else{
            makeCors(res.session_token);
          }
        },
        error: function(xhr, status, err) {
          console.log(err);
          console.log(xhr);
          showAlert('danger', xhr.responseJSON.error);
          $(".login-form input[type=submit]").removeAttr("disabled");
        },
      });
      event.preventDefault();
    });

    $(".mfa-form").on("submit", function(event){
      $.ajax({
        type: "POST",
        url: this.action,
        data: $(this).serialize(),
        success: function(res, status, xhr) {
          console.log(res);

          makeCors(res.session_token);
        },
        error: function(xhr, status, err) {
          console.log(err);
          showAlert("danger", "MFA Verification Failed");
          $(".login-form").show();
          $(".mfa-form").hide();
          $(".login-form input[type=submit]").removeAttr("disabled");
          $(".mfa-form input[type=submit]").removeAttr("disabled");
        },
      });
      event.preventDefault();
    });

    $(".forgot-password-form").on("submit", function(event){
      $.ajax({
        type: "POST",
        url: this.action,
        data: $(this).serialize(),
        success: function(res, status, xhr) {
          console.log(res);

          for(var i=0; i<res.length; i++){
            $('.reset-password-form select').append('<option value="' + res[i].id + '">' + res[i].auth_factor_name + '</option>');
          }

          $(".forgot-password-form").hide();
          $(".reset-password-form").show();
        },
        error: function(xhr, status, err) {
          console.log(err);
          showAlert("danger", "User not found");
        },
      });
      event.preventDefault();
    });

    $(".reset-password-form").on("submit", function(event){
      $.ajax({
        type: "POST",
        url: this.action,
        data: $(this).serialize(),
        success: function(res, status, xhr) {
          console.log(res);

          $(".login-form").show();
          $(".forgot-password-form").hide();
          $(".reset-password-form").hide();
          showAlert("success", "Password changed");
        },
        error: function(xhr, status, err) {
          console.log(err);
          showAlert("danger", err);
        },
      });
      event.preventDefault();
    });
  })
</script>
